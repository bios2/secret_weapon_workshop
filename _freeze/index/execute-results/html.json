{
  "hash": "132bbb43884e0477d4094e599e547e77",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Secret weapon workshop\"\neditor_options: \n  chunk_output_type: console\n---\n\n\n## What is the secret weapon? \n\nIn many ways, ecology is the discipline of replication. \nMost ecological studies have multiple species, multiple sites, or multiple time points in their study -- almost by definition. \nAs a result, our analyses are almost always designed to include replication. The most common tool that people use is the multi-level model (AKA the hierarchical model). \nThese models are populuare, useful, and very flexible; but they have the weakness of being very complex, difficult to interpret, and often difficult to write correctly.\n\nAside from the technical complexity, there's also conceptual complexity when ecological data has many dimensions of space, time, species, etc. It can be quite hard to visualize and understand what's happening. Also, we may have hypotheses that operate at multiple levels. We may have one hypothesis for what happens within any group, for example, across individuals or species, and another hypothesis for what happens across sites or over time.\n\nEnter the secret weapon. The secret weapon is the name [Andrew Gelman ](https://statmodeling.stat.columbia.edu/2005/03/07/the_secret_weap/). Instead of conducting one large analysis, divide your data into multiple small groups, fit a model to each small group, and compare one or more summary statistics across groups.\n\nThen we can either analyze the summary statistics in a second study, which is a technique sometimes called \"statistics on statistics\", or go on to build a multilevel model. We may even decide that this is a sufficient endpoint for our study.\n\nThis is a technique that everyone in this room can use right now and which I can confidently recommend as advice to anybody in college who's beginning a quantitative analysis project.\n\nThis workshop will be divided into 3 parts. First, we'll do a worked example using the `mite` data from the package `vegan`. In the second, we're going to split into an exercise section where we will look at different examples from some long-term datasets that I've found. And third, we will have time to work on our own datasets. \n\n\n## Worked example\n\n### Data preparation -- Center and scale your predictors!\n\nThis example uses the famous `mite` dataset, collected by Daniel Borcard in 1989 and included in the famous `vegan` package.\n\n[Slides introducing the dataset](https://bios2.github.io/hiermod/slides/01_Data/#/oribatid-mite)\n\nFirst, we'll load the data and do some reorganization and preparation.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(mite, package = \"vegan\")\ndata(\"mite.env\", package = \"vegan\")\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(cmdstanr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThis is cmdstanr version 0.7.1\n- CmdStanR documentation and vignettes: mc-stan.org/cmdstanr\n- CmdStan path: /home/andrew/software/cmdstan\n- CmdStan version: 2.34.1\n```\n\n\n:::\n\n```{.r .cell-code}\n# combine data and environment\nmite_data_long <- bind_cols(mite.env, mite) |> \n  pivot_longer(Brachy:Trimalc2, names_to = \"spp\", values_to = \"abd\")\n```\n:::\n\n\nBecause we're ecologists, we'll do one of the most classic ecological models: a Binomial GLM, modelling the presence or absence of a species based on the water content of the soil.\n\n$$\n\\begin{align}\n\\text{Presence} &\\sim \\text{Binomial}\\left(\\frac{e^a}{1 + e^a}, 1\\right) \\\\\na &= \\beta_0 + \\beta_xx\n\\end{align}\n$$\n\nWhere $x$ is some predictor variable and $\\frac{e^a}{1 + e^a}$ is the logit link function.\nTo keep things simple and univariate, let's consider only water for $x$. \n\nFirst, a quick word about centering and scaling a predictor variable:\n\n1.  I center the predictor by subtracting the mean. This changes the *intercept* of my linear predictor. It becomes the mean log-odds of occurrance when the water content is average\n2.  I divide water content by 100. The dataset has units of **grams per Litre** of water (see `?vegan::mite.env` for more details). This is fine, but I don't think mites are able to sense differences as precise as a millimeter of water either way. by dividing by 10 I transform this into centilitres, which is more informative.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmite_data_long_transformed <- mite_data_long |> \n  mutate(presabs = as.numeric(abd>0),\n         # center predictors\n         water = (WatrCont - mean(WatrCont)) / 100\n         )\n```\n:::\n\n\n\nThis makes the model:\n\n$$\n\\begin{align}\n\\text{Presence} &\\sim \\text{Binomial}\\left(\\frac{e^a}{1 + e^a}, 1\\right) \\\\\na &= \\beta_0 + \\beta_{\\text{water}}\\frac{\\text{water} - \\overline{\\text{water}}}{100}\n\\end{align}\n$$\n\n\n### The secret weapon: visually\n\nWe can already get a very good visual expression of the Secret Weapon approach using the power of ggplot2 and `stat_smooth()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmite_data_long_transformed |> \n  ggplot(aes(x = water, y = presabs)) + \n  geom_point() + \n  stat_smooth(method = \"glm\", method.args = list(family = \"binomial\")) + \n  facet_wrap(~spp)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nsome things to notice about this figure:\n\n-   the x-axis scale has been transformed from \"grams per litre\" to \"centilitres away from average\"\n-   there is a ton of variation in how different species respond to water!\n\n### The secret weapon: in tidyverse code\n\nWe're going to perform the following steps on these data:\n\n1. divide the dataset up into different species\n1. fit _precisely the same_ model to each one\n1. extract the coefficients\n1. visualize these\n\nTo do this, we'll be using some handy tricks from the tidyverse, which let us implement a strategy called \"split-apply-combine\"\n\n#### Split-Apply-Combine\n\n[\"split-apply-combine\"](https://vita.had.co.nz/papers/plyr.pdf) describes a really general workflow in statistics / data science, which was described my Rstudio's Hadley Wickham in the paper linked above. The idea is to divide data into groups, transform each, and then put the results together. The Secret Weapon is one example of this approach.\n\nThere are many possible ways to do this in practice. We are using a technique here from the tidyverse, which you can [read more about here](https://dplyr.tidyverse.org/articles/rowwise.html).  A for-loop would also work for this kind of problem!\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmite_many_glms <- mite_data_long_transformed |> \n  nest_by(spp) |> \n  mutate(logistic_regressions = list(\n    glm(presabs ~ water,\n        family = \"binomial\",\n        data = data))) |> \n  mutate(coefs = list(broom::tidy(logistic_regressions)))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmite_many_glm_coefs <- mite_many_glms |> \n  select(-data, -logistic_regressions) |> \n  unnest(coefs)\n\nmite_many_glm_coefs |> \n  ggplot(aes(x = estimate, y = spp,\n             xmin = estimate - std.error,\n             xmax = estimate + std.error)) + \n  geom_pointrange() + \n  facet_wrap(~term, scales = \"free\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nAs you can see, some of these estimates are high, others low. We could also plot these as histograms to see this distribution.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmite_many_glm_coefs |> \n  ggplot(aes(x = estimate)) + \n  geom_histogram(binwidth = .5) + \n  facet_wrap(~term, scales = \"free\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nOnce again, the two parameters of this model represent:\n\n-   *Intercept* The probability (in log-odds) of a species being present at the average water concentration. some species are common, others are rare.\n-   *water* this is the change in probability (in log-odds) as water increases by one centilitre per litre of substrate.\n\n:::{.callout-note}\n## For the Bayesians\n\nThe above is adapted from a tutorial I wrote for a course in Bayesian statistics. If you would like to see how this is done in the Bayesian software Stan, [the course notes are here](https://bios2.github.io/hiermod/topics/correlated_effects/)\n\n:::",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}